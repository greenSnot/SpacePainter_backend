#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('www:server');
var http = require('http');
var config = require('../config/host_config.json');

var server;
if (config.https) {
  // https
  var lex = require('greenlock-express').create({
    server: 'staging',
    agreeTos: true,
    domains: config.domains,
    renewWithin: (91 * 24 * 60 * 60 * 1000),
    renewBy: (90 * 24 * 60 * 60 * 1000),
    challenges: {
      'http-01': require('le-challenge-fs').create({
        webrootPath: '/tmp/acme-challenges'
      })
    },
    store: require('le-store-certbot').create({
      webrootPath: '/tmp/acme-challenges'
    }),
    app: app,
    approvedDomains: function (opts, certs, cb) {
      if (certs) {
        opts.domains = certs.altnames;
      } else {
        opts.domains = config.domains;
        opts.email = config.email;
        opts.agreeTos = true;
      }

      cb(null, { options: opts, certs: certs });
    },
  });

  require('http').createServer(lex.middleware(require('redirect-https')())).listen(80, function () {
    console.log("Listening for ACME http-01 challenges on", this.address());
  });

  server = require('https').createServer(lex.httpsOptions, lex.middleware(app));
  server.listen(443, function() {
    console.log("Listening for ACME tls-sni-01 challenges and serve app on", this.address());
  });
} else {
  app.set('port', 80);
  server = require('http').createServer(app);
  server.listen(80, function() {
    console.log('listening');
  });
}
server.on('error', function(e) {
  console.error(e);
});
